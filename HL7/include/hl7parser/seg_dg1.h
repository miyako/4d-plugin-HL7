#ifndef HL7PARSER_SEG_DG1_H
#define HL7PARSER_SEG_DG1_H

/**
* \file seg_dg1.h
*
* Diagnosis information segment (DG1) accessors for the HL7 parser.
*
* \internal
* Copyright (c) 2011 Juan Jose Comellas <juanjo@comellas.org>
*
* \warning DO NOT MODIFY THIS FILE.
*
* Autogenerated by the ./hl7segdef.py script on Mon Jun  6 12:54:47 2011
*/

/* ------------------------------------------------------------------------
   Headers
   ------------------------------------------------------------------------ */

#include <hl7parser/config.h>
#include <hl7parser/element.h>
#include <hl7parser/export.h>
#include <hl7parser/segment.h>

BEGIN_C_DECL()

/* ------------------------------------------------------------------------
   Function prototypes
   ------------------------------------------------------------------------ */

/**
* Get the set_id (DG1.1) field.
*/
HL7_EXPORT int hl7_dg1_set_id( HL7_Segment *segment );
/**
* Set the set_id (DG1.1) field.
*/
HL7_EXPORT int hl7_dg1_set_set_id( HL7_Segment *segment, HL7_Element *element );
/**
* Set the set_id (DG1.1) field as an integer.
*/
HL7_EXPORT int hl7_dg1_set_set_id_int( HL7_Segment *segment, const int value );
/**
* Get the diagnosis_id (DG1.3.1) component.
*/
HL7_EXPORT HL7_Element *hl7_dg1_diagnosis_id( HL7_Segment *segment );
/**
* Set the diagnosis_id (DG1.3.1) component.
*/
HL7_EXPORT int hl7_dg1_set_diagnosis_id( HL7_Segment *segment, HL7_Element *element );
/**
* Set the diagnosis_id (DG1.3.1) component as a string.
*/
HL7_EXPORT int hl7_dg1_set_diagnosis_id_str( HL7_Segment *segment, const char *value );
/**
* Get the name (DG1.3.2) component.
*/
HL7_EXPORT HL7_Element *hl7_dg1_name( HL7_Segment *segment );
/**
* Set the name (DG1.3.2) component.
*/
HL7_EXPORT int hl7_dg1_set_name( HL7_Segment *segment, HL7_Element *element );
/**
* Set the name (DG1.3.2) component as a string.
*/
HL7_EXPORT int hl7_dg1_set_name_str( HL7_Segment *segment, const char *value );
/**
* Get the coding_system (DG1.3.3) component.
*/
HL7_EXPORT HL7_Element *hl7_dg1_coding_system( HL7_Segment *segment );
/**
* Set the coding_system (DG1.3.3) component.
*/
HL7_EXPORT int hl7_dg1_set_coding_system( HL7_Segment *segment, HL7_Element *element );
/**
* Set the coding_system (DG1.3.3) component as a string.
*/
HL7_EXPORT int hl7_dg1_set_coding_system_str( HL7_Segment *segment, const char *value );
/**
* Get the diagnosis_type (DG1.6) field.
*/
HL7_EXPORT HL7_Element *hl7_dg1_diagnosis_type( HL7_Segment *segment );
/**
* Set the diagnosis_type (DG1.6) field.
*/
HL7_EXPORT int hl7_dg1_set_diagnosis_type( HL7_Segment *segment, HL7_Element *element );
/**
* Set the diagnosis_type (DG1.6) field as a string.
*/
HL7_EXPORT int hl7_dg1_set_diagnosis_type_str( HL7_Segment *segment, const char *value );

END_C_DECL()

#endif /* HL7_SEG_DG1_H */
