#ifndef HL7PARSER_SEG_RCP_H
#define HL7PARSER_SEG_RCP_H

/**
* \file seg_rcp.h
*
* Response control parameter segment (RCP) accessors for the HL7 parser.
*
* \internal
* Copyright (c) 2011 Juan Jose Comellas <juanjo@comellas.org>
*
* \warning DO NOT MODIFY THIS FILE.
*
* Autogenerated by the ./hl7segdef.py script on Mon Jun  6 12:54:47 2011
*/

/* ------------------------------------------------------------------------
   Headers
   ------------------------------------------------------------------------ */

#include <hl7parser/config.h>
#include <hl7parser/element.h>
#include <hl7parser/export.h>
#include <hl7parser/segment.h>

BEGIN_C_DECL()

/* ------------------------------------------------------------------------
   Function prototypes
   ------------------------------------------------------------------------ */

/**
* Get the query_priority (RCP.1) field.
*/
HL7_EXPORT HL7_Element *hl7_rcp_query_priority( HL7_Segment *segment );
/**
* Set the query_priority (RCP.1) field.
*/
HL7_EXPORT int hl7_rcp_set_query_priority( HL7_Segment *segment, HL7_Element *element );
/**
* Set the query_priority (RCP.1) field as a string.
*/
HL7_EXPORT int hl7_rcp_set_query_priority_str( HL7_Segment *segment, const char *value );
/**
* Get the response_limit (RCP.2.1) component.
*/
HL7_EXPORT int hl7_rcp_response_limit( HL7_Segment *segment );
/**
* Set the response_limit (RCP.2.1) component.
*/
HL7_EXPORT int hl7_rcp_set_response_limit( HL7_Segment *segment, HL7_Element *element );
/**
* Set the response_limit (RCP.2.1) component as an integer.
*/
HL7_EXPORT int hl7_rcp_set_response_limit_int( HL7_Segment *segment, const int value );
/**
* Get the response_unit (RCP.2.2.1) subcomponent.
*/
HL7_EXPORT HL7_Element *hl7_rcp_response_unit( HL7_Segment *segment );
/**
* Set the response_unit (RCP.2.2.1) subcomponent.
*/
HL7_EXPORT int hl7_rcp_set_response_unit( HL7_Segment *segment, HL7_Element *element );
/**
* Set the response_unit (RCP.2.2.1) subcomponent as a string.
*/
HL7_EXPORT int hl7_rcp_set_response_unit_str( HL7_Segment *segment, const char *value );
/**
* Get the response_modality_id (RCP.3.1) component.
*/
HL7_EXPORT HL7_Element *hl7_rcp_response_modality_id( HL7_Segment *segment );
/**
* Set the response_modality_id (RCP.3.1) component.
*/
HL7_EXPORT int hl7_rcp_set_response_modality_id( HL7_Segment *segment, HL7_Element *element );
/**
* Set the response_modality_id (RCP.3.1) component as a string.
*/
HL7_EXPORT int hl7_rcp_set_response_modality_id_str( HL7_Segment *segment, const char *value );
/**
* Get the execution_date (RCP.4) field.
*/
HL7_EXPORT time_t hl7_rcp_execution_date( HL7_Segment *segment );
/**
* Set the execution_date (RCP.4) field.
*/
HL7_EXPORT int hl7_rcp_set_execution_date( HL7_Segment *segment, HL7_Element *element );
/**
* Set the execution_date (RCP.4) field as a time_t.
*/
HL7_EXPORT int hl7_rcp_set_execution_date_time( HL7_Segment *segment, const time_t value );
/**
* Get the sort_by (RCP.6) field.
*/
HL7_EXPORT HL7_Element *hl7_rcp_sort_by( HL7_Segment *segment );
/**
* Set the sort_by (RCP.6) field.
*/
HL7_EXPORT int hl7_rcp_set_sort_by( HL7_Segment *segment, HL7_Element *element );
/**
* Set the sort_by (RCP.6) field as a string.
*/
HL7_EXPORT int hl7_rcp_set_sort_by_str( HL7_Segment *segment, const char *value );

END_C_DECL()

#endif /* HL7_SEG_RCP_H */
