#ifndef HL7PARSER_SEG_ERR_H
#define HL7PARSER_SEG_ERR_H

/**
* \file seg_err.h
*
* Error information segment (ERR) accessors for the HL7 parser.
*
* \internal
* Copyright (c) 2011 Juan Jose Comellas <juanjo@comellas.org>
*
* \warning DO NOT MODIFY THIS FILE.
*
* Autogenerated by the ./hl7segdef.py script on Mon Jun  6 12:54:47 2011
*/

/* ------------------------------------------------------------------------
   Headers
   ------------------------------------------------------------------------ */

#include <hl7parser/config.h>
#include <hl7parser/element.h>
#include <hl7parser/export.h>
#include <hl7parser/segment.h>

BEGIN_C_DECL()

/* ------------------------------------------------------------------------
   Function prototypes
   ------------------------------------------------------------------------ */

/**
* Get the segment_id (ERR.1.1) component.
*/
HL7_EXPORT HL7_Element *hl7_err_segment_id( HL7_Segment *segment );
/**
* Set the segment_id (ERR.1.1) component.
*/
HL7_EXPORT int hl7_err_set_segment_id( HL7_Segment *segment, HL7_Element *element );
/**
* Set the segment_id (ERR.1.1) component as a string.
*/
HL7_EXPORT int hl7_err_set_segment_id_str( HL7_Segment *segment, const char *value );
/**
* Get the sequence (ERR.1.2) component.
*/
HL7_EXPORT int hl7_err_sequence( HL7_Segment *segment );
/**
* Set the sequence (ERR.1.2) component.
*/
HL7_EXPORT int hl7_err_set_sequence( HL7_Segment *segment, HL7_Element *element );
/**
* Set the sequence (ERR.1.2) component as an integer.
*/
HL7_EXPORT int hl7_err_set_sequence_int( HL7_Segment *segment, const int value );
/**
* Get the field_pos (ERR.1.3) component.
*/
HL7_EXPORT int hl7_err_field_pos( HL7_Segment *segment );
/**
* Set the field_pos (ERR.1.3) component.
*/
HL7_EXPORT int hl7_err_set_field_pos( HL7_Segment *segment, HL7_Element *element );
/**
* Set the field_pos (ERR.1.3) component as an integer.
*/
HL7_EXPORT int hl7_err_set_field_pos_int( HL7_Segment *segment, const int value );
/**
* Get the error_code (ERR.1.4.1) subcomponent.
*/
HL7_EXPORT HL7_Element *hl7_err_error_code( HL7_Segment *segment );
/**
* Set the error_code (ERR.1.4.1) subcomponent.
*/
HL7_EXPORT int hl7_err_set_error_code( HL7_Segment *segment, HL7_Element *element );
/**
* Set the error_code (ERR.1.4.1) subcomponent as a string.
*/
HL7_EXPORT int hl7_err_set_error_code_str( HL7_Segment *segment, const char *value );
/**
* Get the error_text (ERR.1.4.2) subcomponent.
*/
HL7_EXPORT HL7_Element *hl7_err_error_text( HL7_Segment *segment );
/**
* Set the error_text (ERR.1.4.2) subcomponent.
*/
HL7_EXPORT int hl7_err_set_error_text( HL7_Segment *segment, HL7_Element *element );
/**
* Set the error_text (ERR.1.4.2) subcomponent as a string.
*/
HL7_EXPORT int hl7_err_set_error_text_str( HL7_Segment *segment, const char *value );

END_C_DECL()

#endif /* HL7_SEG_ERR_H */
