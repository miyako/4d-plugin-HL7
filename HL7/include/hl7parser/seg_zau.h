#ifndef HL7PARSER_SEG_ZAU_H
#define HL7PARSER_SEG_ZAU_H

/**
* \file seg_zau.h
*
* Procedure authorization information segment (ZAU) accessors for the HL7 parser.
*
* \internal
* Copyright (c) 2011 Juan Jose Comellas <juanjo@comellas.org>
*
* \warning DO NOT MODIFY THIS FILE.
*
* Autogenerated by the ./hl7segdef.py script on Mon Jun  6 12:54:47 2011
*/

/* ------------------------------------------------------------------------
   Headers
   ------------------------------------------------------------------------ */

#include <hl7parser/config.h>
#include <hl7parser/element.h>
#include <hl7parser/export.h>
#include <hl7parser/segment.h>

BEGIN_C_DECL()

/* ------------------------------------------------------------------------
   Function prototypes
   ------------------------------------------------------------------------ */

/**
* Get the prev_authorization_id (ZAU.1.1) component.
*/
HL7_EXPORT HL7_Element *hl7_zau_prev_authorization_id( HL7_Segment *segment );
/**
* Set the prev_authorization_id (ZAU.1.1) component.
*/
HL7_EXPORT int hl7_zau_set_prev_authorization_id( HL7_Segment *segment, HL7_Element *element );
/**
* Set the prev_authorization_id (ZAU.1.1) component as a string.
*/
HL7_EXPORT int hl7_zau_set_prev_authorization_id_str( HL7_Segment *segment, const char *value );
/**
* Get the payor_control_id (ZAU.2.1) component.
*/
HL7_EXPORT HL7_Element *hl7_zau_payor_control_id( HL7_Segment *segment );
/**
* Set the payor_control_id (ZAU.2.1) component.
*/
HL7_EXPORT int hl7_zau_set_payor_control_id( HL7_Segment *segment, HL7_Element *element );
/**
* Set the payor_control_id (ZAU.2.1) component as a string.
*/
HL7_EXPORT int hl7_zau_set_payor_control_id_str( HL7_Segment *segment, const char *value );
/**
* Get the authorization_status (ZAU.3.1) component.
*/
HL7_EXPORT HL7_Element *hl7_zau_authorization_status( HL7_Segment *segment );
/**
* Set the authorization_status (ZAU.3.1) component.
*/
HL7_EXPORT int hl7_zau_set_authorization_status( HL7_Segment *segment, HL7_Element *element );
/**
* Set the authorization_status (ZAU.3.1) component as a string.
*/
HL7_EXPORT int hl7_zau_set_authorization_status_str( HL7_Segment *segment, const char *value );
/**
* Get the authorization_status_text (ZAU.3.2) component.
*/
HL7_EXPORT HL7_Element *hl7_zau_authorization_status_text( HL7_Segment *segment );
/**
* Set the authorization_status_text (ZAU.3.2) component.
*/
HL7_EXPORT int hl7_zau_set_authorization_status_text( HL7_Segment *segment, HL7_Element *element );
/**
* Set the authorization_status_text (ZAU.3.2) component as a string.
*/
HL7_EXPORT int hl7_zau_set_authorization_status_text_str( HL7_Segment *segment, const char *value );
/**
* Get the pre_authorization_id (ZAU.4.1) component.
*/
HL7_EXPORT HL7_Element *hl7_zau_pre_authorization_id( HL7_Segment *segment );
/**
* Set the pre_authorization_id (ZAU.4.1) component.
*/
HL7_EXPORT int hl7_zau_set_pre_authorization_id( HL7_Segment *segment, HL7_Element *element );
/**
* Set the pre_authorization_id (ZAU.4.1) component as a string.
*/
HL7_EXPORT int hl7_zau_set_pre_authorization_id_str( HL7_Segment *segment, const char *value );
/**
* Get the pre_authorization_date (ZAU.5) field.
*/
HL7_EXPORT HL7_Element *hl7_zau_pre_authorization_date( HL7_Segment *segment );
/**
* Set the pre_authorization_date (ZAU.5) field.
*/
HL7_EXPORT int hl7_zau_set_pre_authorization_date( HL7_Segment *segment, HL7_Element *element );
/**
* Set the pre_authorization_date (ZAU.5) field as a string.
*/
HL7_EXPORT int hl7_zau_set_pre_authorization_date_str( HL7_Segment *segment, const char *value );
/**
* Get the copay (ZAU.6.1.1) subcomponent.
*/
HL7_EXPORT HL7_Element *hl7_zau_copay( HL7_Segment *segment );
/**
* Set the copay (ZAU.6.1.1) subcomponent.
*/
HL7_EXPORT int hl7_zau_set_copay( HL7_Segment *segment, HL7_Element *element );
/**
* Set the copay (ZAU.6.1.1) subcomponent as a string.
*/
HL7_EXPORT int hl7_zau_set_copay_str( HL7_Segment *segment, const char *value );
/**
* Get the copay_currency (ZAU.6.1.2) subcomponent.
*/
HL7_EXPORT HL7_Element *hl7_zau_copay_currency( HL7_Segment *segment );
/**
* Set the copay_currency (ZAU.6.1.2) subcomponent.
*/
HL7_EXPORT int hl7_zau_set_copay_currency( HL7_Segment *segment, HL7_Element *element );
/**
* Set the copay_currency (ZAU.6.1.2) subcomponent as a string.
*/
HL7_EXPORT int hl7_zau_set_copay_currency_str( HL7_Segment *segment, const char *value );

END_C_DECL()

#endif /* HL7_SEG_ZAU_H */
